[project]
name = "touriquest-media-service"
version = "1.0.0"
description = "TouriQuest Media Management and Content Processing Service"
authors = [
    {name = "TouriQuest Team", email = "dev@touriquest.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"

dependencies = [
    # Web Framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "python-multipart>=0.0.6",
    
    # Database
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.7",
    
    # Authentication & Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-decouple>=3.8",
    
    # Media Processing
    "pillow>=10.0.0",
    "ffmpeg-python>=0.2.0",
    "librosa>=0.10.0",
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    
    # Cloud Storage
    "boto3>=1.29.0",
    "botocore>=1.32.0",
    
    # Background Processing
    "celery[redis]>=5.3.0",
    "redis>=5.0.0",
    
    # Content Analysis
    "nltk>=3.8",
    "textblob>=0.17.1",
    "scikit-learn>=1.3.0",
    
    # File Processing
    "magic>=0.4.27",
    "python-magic>=0.4.27",
    "filetype>=1.2.0",
    
    # Validation & Serialization
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    
    # HTTP & API
    "httpx>=0.25.0",
    "requests>=2.31.0",
    
    # Monitoring & Logging
    "prometheus-client>=0.17.0",
    "structlog>=23.1.0",
    
    # Utilities
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
    "click>=8.1.7",
    "typer>=0.9.0",
    
    # Development
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "httpx>=0.25.0",
    "factory-boy>=3.3.0",
    "faker>=19.6.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "coverage[toml]>=7.3.0",
]

lint = [
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.23.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100
known_first_party = ["app"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "PIL.*",
    "ffmpeg.*",
    "librosa.*",
    "cv2.*",
    "magic.*",
    "nltk.*",
    "textblob.*",
    "sklearn.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 100
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".tox",
    ".mypy_cache",
    ".pytest_cache",
    "migrations",
]

[project.scripts]
media-service = "app.main:main"