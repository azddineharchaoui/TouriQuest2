[tool.poetry]
name = "touriquest-backend"
version = "1.0.0"
description = "TouriQuest Travel Platform Backend - Microservices Architecture"
authors = ["TouriQuest Team <dev@touriquest.com>"]
readme = "README.md"
packages = [{include = "shared"}, {include = "services"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = {extras = ["email"], version = "^2.5.0"}
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.0"
alembic = "^1.13.0"
asyncpg = "^0.29.0"
redis = {extras = ["hiredis"], version = "^5.0.0"}
celery = {extras = ["redis"], version = "^5.3.0"}
elasticsearch = "^8.11.0"
openai = "^1.3.0"
anthropic = "^0.7.0"
stripe = "^7.8.0"
boto3 = "^1.34.0"
httpx = "^0.25.0"
websockets = "^12.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
email-validator = "^2.1.0"
prometheus-client = "^0.19.0"
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"
opentelemetry-instrumentation-fastapi = "^0.42b0"
opentelemetry-instrumentation-sqlalchemy = "^0.42b0"
opentelemetry-instrumentation-redis = "^0.42b0"
structlog = "^23.2.0"
python-json-logger = "^2.0.7"
sentry-sdk = {extras = ["fastapi"], version = "^1.38.0"}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
httpx = "^0.25.0"
factory-boy = "^3.3.0"
faker = "^20.1.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
bandit = "^1.7.5"
pre-commit = "^3.6.0"
locust = "^2.17.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "redis.*",
    "elasticsearch.*",
    "boto3.*",
    "botocore.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=shared --cov=services --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["shared", "services"]
omit = ["*/tests/*", "*/migrations/*", "*/venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]