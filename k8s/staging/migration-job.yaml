apiVersion: batch/v1
kind: Job
metadata:
  name: db-migration
  namespace: touriquest-staging
  labels:
    app: db-migration
spec:
  template:
    metadata:
      labels:
        app: db-migration
    spec:
      restartPolicy: OnFailure
      containers:
      - name: db-migration
        image: ghcr.io/azddineharchaoui/touriquest2/migrations:staging
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: touriquest-secrets
              key: database-url
        - name: ENVIRONMENT
          value: "staging"
        command:
        - /bin/sh
        - -c
        - |
          echo "Starting database migration..."
          alembic upgrade head
          echo "Database migration completed successfully!"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      backoffLimit: 3
---
apiVersion: batch/v1
kind: Job
metadata:
  name: health-check
  namespace: touriquest-staging
  labels:
    app: health-check
spec:
  template:
    metadata:
      labels:
        app: health-check
    spec:
      restartPolicy: OnFailure
      containers:
      - name: health-check
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Starting health checks..."
          
          # Wait for services to be ready
          sleep 30
          
          # Check API Gateway
          echo "Checking API Gateway..."
          curl -f http://api-gateway-service/health || exit 1
          
          # Check Auth Service
          echo "Checking Auth Service..."
          curl -f http://auth-service:8001/health || exit 1
          
          echo "All health checks passed!"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      backoffLimit: 5
---
apiVersion: batch/v1
kind: Job
metadata:
  name: smoke-test
  namespace: touriquest-staging
  labels:
    app: smoke-test
spec:
  template:
    metadata:
      labels:
        app: smoke-test
    spec:
      restartPolicy: OnFailure
      containers:
      - name: smoke-test
        image: ghcr.io/azddineharchaoui/touriquest2/smoke-tests:staging
        env:
        - name: API_BASE_URL
          value: "http://api-gateway-service"
        - name: ENVIRONMENT
          value: "staging"
        command:
        - /bin/sh
        - -c
        - |
          echo "Starting smoke tests..."
          
          # Test API endpoints
          echo "Testing API endpoints..."
          
          # Test health endpoint
          curl -f $API_BASE_URL/health || exit 1
          echo "✓ Health check passed"
          
          # Test auth endpoints
          curl -f $API_BASE_URL/api/v1/auth/ping || exit 1
          echo "✓ Auth service reachable"
          
          # Test user registration (with test data)
          RESPONSE=$(curl -s -X POST $API_BASE_URL/api/v1/auth/register \
            -H "Content-Type: application/json" \
            -d '{"email":"test@example.com","password":"testpass123","first_name":"Test","last_name":"User"}')
          
          if echo "$RESPONSE" | grep -q "email"; then
            echo "✓ User registration test passed"
          else
            echo "✗ User registration test failed"
            exit 1
          fi
          
          # Test property search
          curl -f "$API_BASE_URL/api/v1/properties/search?location=Marrakech" || exit 1
          echo "✓ Property search test passed"
          
          # Test POI discovery
          curl -f "$API_BASE_URL/api/v1/pois/discover?location=Casablanca" || exit 1
          echo "✓ POI discovery test passed"
          
          echo "All smoke tests passed!"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      backoffLimit: 3